[x] - Utilizar Nest.JS (https://docs.nestjs.com/)

[x] - Criar uma API (CRUD) completa.

[x] - Implementar relações entre entidades: 1x1, 1xN, NxN.

[x] - Realizar o mapeamento e isolamento de Entidades e DTOs.

[x] - Seguir o padrão MVC (ou arquitetura em camadas similar):

[x] - Validação de permissões em middlewares/decorators ou na camada de controller.

[x] - Lógica e regras de negócio nos serviços (Services).

[x] - Conexões e operações com banco de dados na camada de repositórios (Repositories).

[x] - Subir um banco de dados local utilizando Docker e conectar ao backend.

[x] - Fornecer um README.md claro com instruções para iniciar o projeto e o banco de dados, além de quaisquer outros comentários relevantes.

[x] - Documentar a API utilizando Swagger (OpenAPI).

[x] - Implementar gerenciamento de permissões e aplicar validação via middleware/decorators.

[x] - Toda entrada de DTO via API deve ser validada e tratada (atributo a atributo, tanto atributos presentes quanto tipos).

[x] - Nenhuma entidade do banco de dados deve transitar para fora da camada de repositório (ex: para serviços ou controllers).

[x] - Realizar uma integração externa para consulta de CEP e disponibilizá-la como um serviço interno na API.

[x] - Disponibilizar um serviço de pesquisa à PokeAPI com capacidade de filtros e paginação.